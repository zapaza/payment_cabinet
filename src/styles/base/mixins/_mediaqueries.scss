@use './base/functions' as f;
@use '../variables'as v;

@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
  $min: f.get-value($breakpoints, $name);
  @return if($min != 0, $min, null);
}

@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
  $max: f.get-value($breakpoints, $name);
  @return if($max and $max > 0, $max - .02, null);
}

@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {
  @return if(breakpoint-min($name, $breakpoints) == null, "", "-#{$name}");
}

@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}

@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
  $max: breakpoint-max($name, $breakpoints);
  @if $max {
    @media (max-width: $max) {
      @content;
    }
  } @else {
    @content;
  }
}

@mixin min($name) {
  $min: breakpoint-min($name, v.$grid-breakpoints);

  @if $min {
    @media (min-width: $min) {
      @content;
    }
  }

  @else {
    @content;
  }
}

@mixin max($name) {
  $max: breakpoint-min($name, v.$grid-breakpoints);

  @if $max {

    @media (max-width: $max) {
      @content;
    }
  }

  @else {
    @warn 'no breackpoint: #{$name}';
  }
}

@mixin between($lower, $upper) {
  $min: breakpoint-min($lower, v.$grid-breakpoints);
  $max: breakpoint-max($upper, v.$grid-breakpoints);

  @if $min !=null and $max !=null {

    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  }

  @else if $max==null {
    @include min($lower, v.$grid-breakpoints) {
      @content;
    }
  }

  @else if $min==null {
    @include max($upper, v.$grid-breakpoints) {
      @content;
    }
  }
}

@mixin get-mq-map($prop, $map, $name, $mediaAlwaysOn: false) {
  @if (type-of(map-get($map, $name))==map) {

    @each $bp, $el in map-get($map, $name) {
      @if $bp==375 {
        @if $mediaAlwaysOn {
          @include min($bp) {
            #{$prop}: f.get-value($map, $name, $bp);
          }
        }

        @else {
          #{$prop}: f.get-value($map, $name, $bp);
        }
      }

      @else {
        @include min($bp) {
          #{$prop}: f.get-value($map, $name, $bp);
        }
      }
    }
  }

  @else {
    #{$prop}: f.get-value($map, $name);
  }
}
